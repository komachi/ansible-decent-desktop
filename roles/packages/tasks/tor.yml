---
- name: Install Tor
  register: install_tor
  until: install_tor is succeeded
  ansible.builtin.apt:
    name:
      - tor
      - torsocks
      - obfs4proxy
    state: present

- name: Generate tor hashed password
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command: tor --hash-password "{{ lookup('password', 'credentials/tor_hashed length=15') }}"
  register: tor_hashed_password
  changed_when: false

- name: Configure Tor
  ansible.builtin.template:
    src: tor/torrc.j2
    dest: /etc/tor/torrc
    owner: debian-tor
    group: debian-tor
    mode: "0640"
  register: torconfigure
  notify:
    - Restart Tor

- name: Enable Tor service
  ansible.builtin.systemd:
    name: tor@default
    enabled: true

# TODO install tor browser
# - name: Check if tbb is already downloaded
#   stat:
#     path: /home/{{ username }}/.tb/tor-browser
#   register: tbb_exists

# - name: Download tbb
#   become: true
#   become_user: "{{ username }}"
#   shell: update-torbrowser --noask --ordinary
#   when: not tbb_exists.stat.exists

# - name: Add systemd service for update-torbrowser
#   copy:
#     src: systemd/update-torbrowser.{{ item }}
#     dest: /home/{{ username }}/.config/systemd/user/update-torbrowser.{{ item }}
#     mode: "0640"
#     owner: "{{ username }}"
#     group: "{{ username }}"
#   loop:
#     - service
#     - timer

# - name: Enable update-torbrowser timer
#   become: true
#   become_user: "{{ username }}"
#   systemd:
#     scope: user
#     name: update-torbrowser.timer
#     enabled: true
#     state: started

# - name: Ensures ~/.local/share/applications exists
#   file:
#     path: /home/{{ username }}/.local/share/applications
#     state: directory
#     owner: "{{ username }}"
#     group: "{{ username }}"
#     mode: 0750

# - name: Copy desktop file
#   copy:
#     src: applications/janondisttorbrowser.desktop
#     dest: /home/{{ username }}/.local/share/applications/janondisttorbrowser.desktop
#     mode: 0640
#     owner: "{{ username }}"
#     group: "{{ username }}"
